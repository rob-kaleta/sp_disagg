#### global variables####
# Project GPKG
geopkg <- "1_GPKG/sp_dagg_data.gpkg"
#study area
area<-st_read(geopkg,layer="UK_GCB_2017") %>% filter(ctry17nm %in% c("Wales","England"))
#project coordinate system
proj_crs <- "+init=epsg:27700 +proj=tmerc +lat_0=49 +lon_0=-2 +k=0.9996012717 +x_0=400000 +y_0=-100000 +datum=OSGB36 +units=m +no_defs +ellps=airy +towgs84=446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894"
#project extent
proj_ext <- extent(st_bbox(area)[c(1,3,2,4)])
#empty_raster
r<-raster(proj_ext,crs=proj_crs,res=100,val=NA)
#### global variables

# When supplied with a folder containing rasters, a bounding area (country/district etc.), resolution and CRS
# this function will create an empty raster,load all rasters folder, reproject, crop and stack them. 
process_rasters<-function(raster_folder, study_area = area){
  # start check
  # defined<-ls(sorted=FALSE)
  # passed<-names(as.list(match.call())[-1])
  # if (any(!defined %in% passed)) {
  #   stop(paste("missinge values for",paste(setdiff(defined,passed),collapse=",")))
  # }
  # end check
  rasters_list<-list.files(raster_folder,recursive = TRUE, pattern="*.tif$",ignore.case = TRUE,full.names=TRUE)
  print(rasters_list)
  rast_out <- lapply(rasters_list,function(raster_in){
      rast <- raster(raster_in)
      print(rast)
    # if TRUE then raster is categorical and interp is set to nearest neighbour else raster is cotinuous and interp set to bilinear  
    if (floor(maxValue(rast))==maxValue(rast)){
      interp<-"ngb"
    } else{
      interp<-"bilinear"
    }
    # main body of function
      #empty_raster<-raster(area,res=resolution,crs = crs)
      projectRaster(rast,r,method=interp)%>%
      crop(proj_ext)%>%
      mask(study_area) 
  }
  )
  final_stack<-do.call(stack,rast_out)
}

raster_stack2<-process_rasters("1_rasters/1_processed")

build<-raster("1_rasters/1_processed/eng_wal_100m_build_density.tif")

test<-projectRaster(build,r,method="bilinear")%>%
  crop(proj_ext)%>%
  mask(study_area) 
